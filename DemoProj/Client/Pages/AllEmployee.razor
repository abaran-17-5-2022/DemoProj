@page "/allemployees"
@using DemoProj.Shared.Models
@inject HttpClient Http
@inject IEmployeeService EmployeeService
@inject NavigationManager NavManager

<PageTitle>Employee Details</PageTitle>
<div class="page">
<div class="local-header">
    <h1>Employees</h1>
    <div class="actions">
        <input type="text" @oninput="Search" placeholder="Search"/>
        <button @onclick="Add" class="add-button"><img src="plus.svg" /></button>
        <p>Order By:</p>
        <button @onclick="() => OrderById(orderByIdAsc)">Id</button>
        <button @onclick="() => OrderByFname(orderByFnameAsc)">Name</button>
    </div>
</div>
@if (employees == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else {
    @foreach (var employee in employees) {
            string pictureType = "male.svg";
            if (employee.gender.Equals("Female"))
            {
                pictureType = "female.svg";
            }
            <div class="main-content" @onclick="() => Details(employee.id)">
            <div class="content-details">
                <img class="profile-pic" src="@pictureType" />
                <div class="details">
                    <p class="name">@employee.first_name @employee.last_name</p>
                    <p class="email"><img src="at.svg" />  @employee.email</p>
                </div>
            </div>
        </div>
    }
}
</div>

@code {
    private EmployeeDB _employee = new ();
    private bool orderByIdAsc = true;
    private bool orderByFnameAsc = true;

    private List<EmployeeDB>? employees;

    protected override async Task OnInitializedAsync()
    {
        employees = await EmployeeService.GetEmployees();
    }

    private async Task Search(ChangeEventArgs args)
    {
        string query = args.Value == null ? "" : (string)args.Value;
        if (query == "")
        {
            employees = await EmployeeService.GetEmployees();
        } else {
            employees = await EmployeeService.GetEmployeesByName(query);
        }
    }

    private void Add()
    {
        NavManager.NavigateTo("/add/employee");
    }

    private void Details(int Id)
    {
        NavManager.NavigateTo($"/details/employee/{Id}");
    }

    private void OrderById(bool asc)
    {
        if (!asc)
        {
            employees = employees!.OrderByDescending(e => e.id).ToList();
        } else
        {
            employees = employees!.OrderBy(e => e.id).ToList();
        }
        orderByIdAsc = !orderByIdAsc;
    }

    private void OrderByFname(bool asc)
    {
        if (!asc)
        {
            employees = employees!.OrderByDescending(e => e.first_name + e.last_name).ToList();
        } else
        {
            employees = employees!.OrderBy(e => e.first_name + e.last_name).ToList();
        }
        orderByFnameAsc = !orderByFnameAsc;
    }
}