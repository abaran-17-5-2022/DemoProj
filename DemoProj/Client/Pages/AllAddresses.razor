@page "/alladdresses"
@using DemoProj.Shared.Models
@inject HttpClient Http
@inject IAddressService AddressService

<PageTitle>Address Details</PageTitle>

<h1>Address Details</h1>

<input type="text" @oninput="Search" placeholder="Search"/>

@if (addresses == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>Address</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var add in addresses)
        {
            <tr>
                <td>@add.id</td>
                <td>@add.address</td>
                <td><a href="details/address/@add.id">details</a> | <button @onclick="() => delete(add.id)">delete</button></td>
            </tr>
        }
        <tr>
            <td>-</td>
            <td>
                <input type="text" @bind="_address!.address"/>
            </td>
            <td>
                <button @onclick="Add">Add</button>
            </td>
        </tr>
        </tbody>
    </table>
}

@code {
    private Address? _address = new();

    private List<Address>? addresses = new();

    public string search { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        addresses = await AddressService.GetAddresses();
    }

    private async Task Search(ChangeEventArgs args)
    {
        string query = args.Value == null ? "" : (string)args.Value;
        if (query == "")
        {
            addresses = await AddressService.GetAddresses();
        } else
        {
            addresses = await AddressService.GetAddressesByName(query);
        }
    }

    protected async Task Add()
    {
        var tempId = addresses!.MaxBy(a => a.id)!.id + 1;

        _address!.id = tempId;
        await AddressService.AddAddress(_address);
        _address = new();
        addresses = await AddressService.GetAddresses();
    }

    protected async Task delete(int id)
    {
        await AddressService.DeleteAddress(id);
        addresses = await AddressService.GetAddresses();
    }

}