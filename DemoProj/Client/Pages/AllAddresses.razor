@page "/alladdresses"
@using DemoProj.Shared.Models
@inject HttpClient Http
@inject IAddressService AddressService
@inject NavigationManager NavManager

<PageTitle>Address Details</PageTitle>
<div class="page">
<div class="local-header">
    <h1>Addresss</h1>
    <div class="actions">
        <input type="text" @oninput="Search" placeholder="Search"/>
        <button @onclick="Add" class="add-button"><img src="plus.svg" /></button>
    </div>
</div>
@if (addresses == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else {
    @foreach (var address in addresses) {
        <div class="main-content" @onclick="() => Details(address.id)">
            <div class="content-details">
                <img src="marker.svg" />
                <div class="details">
                    <p class="email">@address.street</p>
                    <p class="email">@address.state</p>
                    <p class="email">@address.country</p>
                </div>
            </div>
        </div>
    }
}
</div>

@code {
    private AddressDB _address = new ();

    private List<AddressDB>? addresses;

    protected override async Task OnInitializedAsync()
    {
        addresses = await AddressService.GetAddress();
    }

    private async Task Search(ChangeEventArgs args)
    {
        string query = args.Value == null ? "" : (string)args.Value;
        if (query == "")
        {
            addresses = await AddressService.GetAddress();
        } else
        {
            addresses = await AddressService.GetAddressByName(query);
        }
    }

    private void Add()
    {
        NavManager.NavigateTo("/add/address");
    }

    private void Details(int Id)
    {
        NavManager.NavigateTo($"/details/address/{Id}");
    }
}