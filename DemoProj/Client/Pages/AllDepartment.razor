@page "/alldepartments"
@using DemoProj.Shared.Models
@inject HttpClient Http
@inject IDepartmentService DepartmentService
@inject NavigationManager NavManager

<PageTitle>Department Details</PageTitle>
<div class="page">
<div class="local-header">
    <h1>Departments</h1>
    <div class="actions">
        <input type="text" @oninput="Search" placeholder="Search"/>
        <button @onclick="Add" class="add-button"><img src="plus.svg" /></button>
    </div>
</div>
@if (departments == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else {
    @foreach (var department in departments) {
        <div class="main-content" @onclick="() => Details(department.id)">
            <div class="content-details">
                <img src="building.svg" />
                <div class="details">
                    <p class="name">@department.dept_name</p>
                    <p class="email">@department.company_name</p>
                </div>
            </div>
        </div>
    }
}
</div>

@code {
    private DepartmentDB _department = new ();

    private List<DepartmentDB>? departments;

    protected override async Task OnInitializedAsync()
    {
        departments = await DepartmentService.GetDepartments();
    }

    private async Task Search(ChangeEventArgs args)
    {
        string query = args.Value == null ? "" : (string)args.Value;
        if (query == "")
        {
            departments = await DepartmentService.GetDepartments();
        } else
        {
            departments = await DepartmentService.GetDepartmentsByName(query);
        }
    }

    private void Add()
    {
        NavManager.NavigateTo("/add/department");
    }

    private void Details(int Id)
    {
        NavManager.NavigateTo($"/details/department/{Id}");
    }
}